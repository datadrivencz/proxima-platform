/*
 * Copyright 2017-2023 O2 Czech Republic, a.s.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'cz.o2.proxima.java-conventions'
}

dependencies {
  intoShadow project(':proxima-beam-core')
  intoShadow libraries.beam_io_expansion_service
  testImplementation libraries.beam_runners_direct
  testImplementation libraries.junit4
  testImplementation libraries.hamcrest
  testImplementation libraries.slf4j_log4j
  testImplementation project(path: ':proxima-core', configuration: 'testsJar')
  compileOnly libraries.auto_service_annotations
  compileAnnotationProcessor libraries.lombok
  annotationProcessor libraries.auto_service
}

description = 'cz.o2.proxima:proxima-beam-expansion-service'

enableShadowJar(project)

shadowJar {
  manifest {
    attributes("Main-Class": "cz.o2.proxima.beam.expansion.service.ProximaExpansionService")
  }
}

task testJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
  archiveClassifier = 'tests'
  from sourceSets.test.output
  from sourceSets.main.output
  configurations = [project.configurations.testRuntimeClasspath] + [project.configurations.runtimeClasspath]
  manifest {
    attributes("Main-Class": "cz.o2.proxima.beam.expansion.service.ProximaExpansionService")
  }
  exclude "**/*.RSA"
  mergeServiceFiles()
}

tasks.named("build") {
  dependsOn testJar
}

publishArtifacts(project, "default")
